## Guidelines for contribution via templates ## 
# -  Make sure that all required fields are present and have valid values.
# - Use the appropriate data types for each field (string, number, boolean, etc.).
# - Avoid using sensitive or confidential information in the data structure.
# - If referencing another data structure, make sure that the reference is valid and follows the appropriate format.
# - Include any relevant notes or comments in the data structure to provide additional context or clarification.
# - If modifying an existing data structure, make sure to maintain backward compatibility with previous versions.
# - Follow the predefined structure for the template and do not make changes to the template. template changes can be suggested via a different thread.
# - Ensure that the data structure is well-formatted and easy to read, with proper indentation and spacing.
# - Test the data structure thoroughly before submitting it to the OSC&R.
# - If unsure about any aspect of the data structure, consult with other contributors or the project maintainers before making changes.
# - The file name for the template shall always be in the following format: * ID: name.yaml * | In example: T1111: A very cool technique.yaml
# - We support markdown in description. Use pipe for multiline descriptions
# - The ID should be serialized and counting up from the last ID in the system. If you are unsure as for the correct ID to use, consult with other contributors or the project maintainers before making changes 


## TEMPLATE ##

id: # Definition: Identifier of the procedure | Requirement Level: MUST | Type: String | Structure: P____ | Example: P10032
type: Procedure
summary: # Definition: Summary of the procedure | Requirement Level: MUST | Type: String | Example: CodeCov attack
description: # Definition: Longer description of the procedure | Requirement Level: MAY | Type: LongText | Example: The adversary is trying to gather information they can use to plan future operations
attacking.group: # Definition: The name of the attacking group if known | Requirement Level: MAY | Type: LongText | Example: The adversary is trying to gather information they can use to plan future operations
procedure: # Definition: The description of the process for enabling the attack | Requirement Level: MUST | Type: String | Notes: Please note this is read in a sequential, thus ensure the logical flow of the steps aligns with the chronology of the attack.
  - step: 
        id: # Definition: Identifier of the TECHNIQUE that had been used | Requirement Level: MUST | Type: String | Example: T10065
        summary: # Definition: Summary how the specific technique had been used in the context of the procedure | Requirement Level: MUST | Type: String | Example: The attackers were able to take ownership of an open source library
        description: # Definition: further description of the way the attackers used the technique | Requirement Level: MAY | Type: LongText
        outcome: # Definition: what happened after the attackers succeeded in executing on the technique | Requirement Level: MUST | Type: String | Example: The attacks had the ability to inject malicious code into the target organization's software
references: # Definition: external references to the procedure | Requirement Level: MAY | Type: Array (list)
  - reference:
      type:  # Definition: The type of the reference | Requirement Level: MUST (if reference is attributed) | Type: String (with options) | Options: web.article,research,payload | Example: research
      path:  # Definition: link to the reference | Requirement Level: MUST (if reference is attributed) | Type: String | Example: https://www.bleepingcomputer.com/news/security/lastpass-devops-engineer-hacked-to-steal-password-vault-data-in-2022-breach/
metadata:
  state: # Definition: release state for the procedure | Requirement Level: MUST | Type: String (from options)  | Options: draft, under review, released | Example: released
  created: # Definition: when the procedure was created | Requirement Level: MUST | Type: date/time (ISO 8601) | Example: 2023-03-05T16:31:51+00:00
  updated: # Definition: when the procedure was last updated | Requirement Level: MUST | Type: date/time (ISO 8601) | Example: 2023-03-05T16:31:51+00:00
  version: # Definition: what is the current version of the procedure (each change bumps a version) | Requirement Level: MUST | Type: String | Structure: Major.Minor | Example: 1.4
  creator: # Definition: The individual that created the record in the OSC&R system | Requirement Level: MUST | Type: String
  attribution: # Definition: who should be thanked to as a part of the contribution to OSC&R and in general | Requirement Level: MAY | Type: List